{"version":3,"sources":["../src/ReactHover.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqB,U;;;AAQnB,sBAAa,KAAb,EAAoB;AAAA;;AAAA,8FACZ,KADY;;AAElB,UAAK,KAAL,GAAa;AACX,6BAAuB,MAAM,MAAN,CAAa,OADzB;AAEX,2BAAqB,MAAM,MAAN,CAAa;AAFvB,KAAb;AAFkB;AAMnB;;;;6BAES;AAAA,mBAC6B,KAAK,KADlC;AAAA,UACA,aADA,UACA,aADA;AAAA,UACe,SADf,UACe,SADf;AAAA,mBAE+C,KAAK,KAFpD;AAAA,UAEA,qBAFA,UAEA,qBAFA;AAAA,UAEuB,mBAFvB,UAEuB,mBAFvB;;AAGR,aACE;AAAA;QAAA,EAAK,WAAW,0BAAW,SAAX,CAAhB;QACE;AACE,kBAAQ,qBADV;AAEE,yBAAe,aAFjB;AAGE,yBAAe,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAHjB;AAIE,wBAAc,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB;AAJhB,UADF;QAOE;AACE,kBAAQ,mBADV;AAEE,yBAAe;AAFjB;AAPF,OADF;AAcD;;;kCAEc,I,EAAM;AAAA,UACb,mBADa,GACW,KAAK,KADhB,CACb,mBADa;;AAEnB,UAAI,gBAAgB,IAApB;AACA,UAAI,IAAJ,EAAU;AACR,qCAAoB,mBAApB,IAAyC,SAAS,OAAlD;AACD,OAFD,MAEO;AACL,qCAAoB,mBAApB,IAAyC,SAAS,MAAlD;AACD;AACD,WAAK,QAAL,CAAc;AACZ,6BAAqB;AADT,OAAd;AAGD;;;iCAEa,C,EAAG;AACf,UAAM,UAAU,EAAE,KAAlB;AACA,UAAM,UAAU,EAAE,KAAlB;AAFe,2BAGmC,KAAK,KAHxC,CAGV,OAHU;AAAA,UAGC,YAHD,kBAGC,YAHD;AAAA,UAGe,MAHf,kBAGe,MAHf;AAAA,UAGuB,MAHvB,kBAGuB,MAHvB;AAAA,UAIT,mBAJS,GAIe,KAAK,KAJpB,CAIT,mBAJS;;AAKf,UAAI,gBAAgB,IAApB;AACA,UAAI,CAAC,YAAL,EAAmB;AACjB;AACD;AACD,UAAI,MAAM,MAAN,CAAJ,EAAmB;AACjB,iBAAS,CAAT;AACD;AACD,UAAI,MAAM,MAAN,CAAJ,EAAmB;AACjB,iBAAS,CAAT;AACD;AACD,mCAAoB,mBAApB,IAAyC,KAAK,UAAU,MAAxD,EAAgE,MAAM,UAAU,MAAhF;AACA,WAAK,QAAL,CAAc;AACZ,6BAAqB;AADT,OAAd;AAGD;;;;;;AAnEkB,U,CACZ,S,GAAY;AACjB,UAAQ,iBAAU,MAAV,CAAiB,UADR;AAEjB,iBAAe,iBAAU,MAAV,CAAiB,UAFf;AAGjB,WAAS,iBAAU,MAAV,CAAiB,UAHT;AAIjB,aAAW,iBAAU;AAJJ,C;kBADA,U","file":"ReactHover.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport HoverComponent from './lib/HoverComponent'\nimport TriggerComponent from './lib/TriggerComponent'\nimport classnames from 'classnames'\n\nexport default class ReactHover extends Component {\n  static propTypes = {\n    styles: PropTypes.object.isRequired,\n    componentHtml: PropTypes.object.isRequired,\n    options: PropTypes.object.isRequired,\n    className: PropTypes.string\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      triggerComponentStyle: props.styles.trigger,\n      hoverComponentStyle: props.styles.hoverComponent\n    }\n  }\n\n  render () {\n    const { componentHtml, className } = this.props\n    const { triggerComponentStyle, hoverComponentStyle } = this.state\n    return (\n      <div className={classnames(className)} >\n        <TriggerComponent\n          styles={triggerComponentStyle}\n          componentHtml={componentHtml}\n          setVisibility={this.setVisibility.bind(this)}\n          getCursorPos={this.getCursorPos.bind(this)}\n        />\n        <HoverComponent\n          styles={hoverComponentStyle}\n          componentHtml={componentHtml}\n        />\n      </div>\n    )\n  }\n\n  setVisibility (flag) {\n    let { hoverComponentStyle } = this.state\n    let updatedStyles = null\n    if (flag) {\n      updatedStyles = {...hoverComponentStyle, display: 'block'}\n    } else {\n      updatedStyles = {...hoverComponentStyle, display: 'none'}\n    }\n    this.setState({\n      hoverComponentStyle: updatedStyles\n    })\n  }\n\n  getCursorPos (e) {\n    const cursorX = e.pageX\n    const cursorY = e.pageY\n    let {options: { followCursor, shiftX, shiftY }} = this.props\n    let { hoverComponentStyle } = this.state\n    let updatedStyles = null\n    if (!followCursor) {\n      return\n    }\n    if (isNaN(shiftX)) {\n      shiftX = 0\n    }\n    if (isNaN(shiftY)) {\n      shiftY = 0\n    }\n    updatedStyles = {...hoverComponentStyle, top: cursorY + shiftY, left: cursorX + shiftX}\n    this.setState({\n      hoverComponentStyle: updatedStyles\n    })\n  }\n}\n"]}